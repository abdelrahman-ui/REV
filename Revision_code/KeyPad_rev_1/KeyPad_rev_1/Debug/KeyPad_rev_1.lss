
KeyPad_rev_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001aa  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001fe  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000230  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  0000026c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000007bb  00000000  00000000  000002c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005e5  00000000  00000000  00000a7f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000052d  00000000  00000000  00001064  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000078  00000000  00000000  00001594  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000349  00000000  00000000  0000160c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000118  00000000  00000000  00001955  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000038  00000000  00000000  00001a6d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 c6 00 	call	0x18c	; 0x18c <main>
  64:	0c 94 d3 00 	jmp	0x1a6	; 0x1a6 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Check_1>:
 */ 
#include "KeyPad.h"

void Check_1()
{
	KeyPad_Port=0xEF;
  6c:	8f ee       	ldi	r24, 0xEF	; 239
  6e:	82 bb       	out	0x12, r24	; 18
	if(((KeyPad_Pin>>r1)&1)==0)
  70:	80 99       	sbic	0x10, 0	; 16
  72:	05 c0       	rjmp	.+10     	; 0x7e <Check_1+0x12>
	{
		
		PORTA|=(1<<0);
  74:	d8 9a       	sbi	0x1b, 0	; 27
		while(((KeyPad_Pin>>r1)&1)==0) ; //6ool ma 2na da8et zaher 
  76:	80 9b       	sbis	0x10, 0	; 16
  78:	fe cf       	rjmp	.-4      	; 0x76 <Check_1+0xa>
		PORTA&=~(1<<0);
  7a:	d8 98       	cbi	0x1b, 0	; 27
  7c:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r2)&1)==0)
  7e:	81 99       	sbic	0x10, 1	; 16
  80:	0b c0       	rjmp	.+22     	; 0x98 <Check_1+0x2c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  82:	81 ee       	ldi	r24, 0xE1	; 225
  84:	94 e0       	ldi	r25, 0x04	; 4
  86:	01 97       	sbiw	r24, 0x01	; 1
  88:	f1 f7       	brne	.-4      	; 0x86 <Check_1+0x1a>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <Check_1+0x20>
  8c:	00 00       	nop
	{
		_delay_ms(5);
		PORTA|=(1<<1);
  8e:	d9 9a       	sbi	0x1b, 1	; 27
		while(((KeyPad_Pin>>r2)&1)==0) ; //6ool ma 2na da8et
  90:	81 9b       	sbis	0x10, 1	; 16
  92:	fe cf       	rjmp	.-4      	; 0x90 <Check_1+0x24>
		PORTA&=~(1<<1);
  94:	d9 98       	cbi	0x1b, 1	; 27
  96:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r3)&1)==0)
  98:	82 99       	sbic	0x10, 2	; 16
  9a:	05 c0       	rjmp	.+10     	; 0xa6 <Check_1+0x3a>
	{
		
		PORTA|=(1<<2);
  9c:	da 9a       	sbi	0x1b, 2	; 27
		while(((KeyPad_Pin>>r3)&1)==0) ; //6ool ma 2na da8et
  9e:	82 9b       	sbis	0x10, 2	; 16
  a0:	fe cf       	rjmp	.-4      	; 0x9e <Check_1+0x32>
		PORTA&=~(1<<2);
  a2:	da 98       	cbi	0x1b, 2	; 27
  a4:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r4)&1)==0)
  a6:	83 99       	sbic	0x10, 3	; 16
  a8:	04 c0       	rjmp	.+8      	; 0xb2 <Check_1+0x46>
	{
		
		PORTA|=(1<<3);
  aa:	db 9a       	sbi	0x1b, 3	; 27
		while(((KeyPad_Pin>>r4)&1)==0) ; //6ool ma 2na da8et
  ac:	83 9b       	sbis	0x10, 3	; 16
  ae:	fe cf       	rjmp	.-4      	; 0xac <Check_1+0x40>
		PORTA&=~(1<<3);
  b0:	db 98       	cbi	0x1b, 3	; 27
  b2:	08 95       	ret

000000b4 <Check_2>:
	}
}
void Check_2()
{
	KeyPad_Port=0xDF;
  b4:	8f ed       	ldi	r24, 0xDF	; 223
  b6:	82 bb       	out	0x12, r24	; 18
	if(((KeyPad_Pin>>r1)&1)==0)
  b8:	80 99       	sbic	0x10, 0	; 16
  ba:	05 c0       	rjmp	.+10     	; 0xc6 <Check_2+0x12>
	{
		
		PORTA|=(1<<0);
  bc:	d8 9a       	sbi	0x1b, 0	; 27
		while(((KeyPad_Pin>>r1)&1)==0) ; //6ool ma 2na da8et
  be:	80 9b       	sbis	0x10, 0	; 16
  c0:	fe cf       	rjmp	.-4      	; 0xbe <Check_2+0xa>
		PORTA&=~(1<<0);
  c2:	d8 98       	cbi	0x1b, 0	; 27
  c4:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r2)&1)==0)
  c6:	81 99       	sbic	0x10, 1	; 16
  c8:	0b c0       	rjmp	.+22     	; 0xe0 <Check_2+0x2c>
  ca:	81 ee       	ldi	r24, 0xE1	; 225
  cc:	94 e0       	ldi	r25, 0x04	; 4
  ce:	01 97       	sbiw	r24, 0x01	; 1
  d0:	f1 f7       	brne	.-4      	; 0xce <Check_2+0x1a>
  d2:	00 c0       	rjmp	.+0      	; 0xd4 <Check_2+0x20>
  d4:	00 00       	nop
	{
		_delay_ms(5);
		PORTA|=(1<<1);
  d6:	d9 9a       	sbi	0x1b, 1	; 27
		while(((KeyPad_Pin>>r2)&1)==0) ; //6ool ma 2na da8et
  d8:	81 9b       	sbis	0x10, 1	; 16
  da:	fe cf       	rjmp	.-4      	; 0xd8 <Check_2+0x24>
		PORTA&=~(1<<1);
  dc:	d9 98       	cbi	0x1b, 1	; 27
  de:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r3)&1)==0)
  e0:	82 99       	sbic	0x10, 2	; 16
  e2:	05 c0       	rjmp	.+10     	; 0xee <Check_2+0x3a>
	{
		
		PORTA|=(1<<2);
  e4:	da 9a       	sbi	0x1b, 2	; 27
		while(((KeyPad_Pin>>r3)&1)==0) ; //6ool ma 2na da8et
  e6:	82 9b       	sbis	0x10, 2	; 16
  e8:	fe cf       	rjmp	.-4      	; 0xe6 <Check_2+0x32>
		PORTA&=~(1<<2);
  ea:	da 98       	cbi	0x1b, 2	; 27
  ec:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r4)&1)==0)
  ee:	83 99       	sbic	0x10, 3	; 16
  f0:	04 c0       	rjmp	.+8      	; 0xfa <Check_2+0x46>
	{
		
		PORTA|=(1<<3);
  f2:	db 9a       	sbi	0x1b, 3	; 27
		while(((KeyPad_Pin>>r4)&1)==0) ; //6ool ma 2na da8et
  f4:	83 9b       	sbis	0x10, 3	; 16
  f6:	fe cf       	rjmp	.-4      	; 0xf4 <Check_2+0x40>
		PORTA&=~(1<<3);
  f8:	db 98       	cbi	0x1b, 3	; 27
  fa:	08 95       	ret

000000fc <Check_3>:
	}
	
}
void Check_3()
{
	KeyPad_Port=0xBF;
  fc:	8f eb       	ldi	r24, 0xBF	; 191
  fe:	82 bb       	out	0x12, r24	; 18
	if(((KeyPad_Pin>>r1)&1)==0)
 100:	80 99       	sbic	0x10, 0	; 16
 102:	05 c0       	rjmp	.+10     	; 0x10e <Check_3+0x12>
	{
		
		PORTA|=(1<<0);
 104:	d8 9a       	sbi	0x1b, 0	; 27
		while(((KeyPad_Pin>>r1)&1)==0) ; //6ool ma 2na da8et
 106:	80 9b       	sbis	0x10, 0	; 16
 108:	fe cf       	rjmp	.-4      	; 0x106 <Check_3+0xa>
		PORTA&=~(1<<0);
 10a:	d8 98       	cbi	0x1b, 0	; 27
 10c:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r2)&1)==0)
 10e:	81 99       	sbic	0x10, 1	; 16
 110:	0b c0       	rjmp	.+22     	; 0x128 <Check_3+0x2c>
 112:	81 ee       	ldi	r24, 0xE1	; 225
 114:	94 e0       	ldi	r25, 0x04	; 4
 116:	01 97       	sbiw	r24, 0x01	; 1
 118:	f1 f7       	brne	.-4      	; 0x116 <Check_3+0x1a>
 11a:	00 c0       	rjmp	.+0      	; 0x11c <Check_3+0x20>
 11c:	00 00       	nop
	{
		_delay_ms(5);
		PORTA|=(1<<1);
 11e:	d9 9a       	sbi	0x1b, 1	; 27
		while(((KeyPad_Pin>>r2)&1)==0) ; //6ool ma 2na da8et
 120:	81 9b       	sbis	0x10, 1	; 16
 122:	fe cf       	rjmp	.-4      	; 0x120 <Check_3+0x24>
		PORTA&=~(1<<1);
 124:	d9 98       	cbi	0x1b, 1	; 27
 126:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r3)&1)==0)
 128:	82 99       	sbic	0x10, 2	; 16
 12a:	05 c0       	rjmp	.+10     	; 0x136 <Check_3+0x3a>
	{
		
		PORTA|=(1<<2);
 12c:	da 9a       	sbi	0x1b, 2	; 27
		while(((KeyPad_Pin>>r3)&1)==0) ; //6ool ma 2na da8et
 12e:	82 9b       	sbis	0x10, 2	; 16
 130:	fe cf       	rjmp	.-4      	; 0x12e <Check_3+0x32>
		PORTA&=~(1<<2);
 132:	da 98       	cbi	0x1b, 2	; 27
 134:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r4)&1)==0)
 136:	83 99       	sbic	0x10, 3	; 16
 138:	04 c0       	rjmp	.+8      	; 0x142 <Check_3+0x46>
	{
		
		PORTA|=(1<<3);
 13a:	db 9a       	sbi	0x1b, 3	; 27
		while(((KeyPad_Pin>>r4)&1)==0) ; //6ool ma 2na da8et
 13c:	83 9b       	sbis	0x10, 3	; 16
 13e:	fe cf       	rjmp	.-4      	; 0x13c <Check_3+0x40>
		PORTA&=~(1<<3);
 140:	db 98       	cbi	0x1b, 3	; 27
 142:	08 95       	ret

00000144 <Check_4>:
	}
}
void Check_4()
{
	KeyPad_Port=0x7F;
 144:	8f e7       	ldi	r24, 0x7F	; 127
 146:	82 bb       	out	0x12, r24	; 18
	if(((KeyPad_Pin>>r1)&1)==0)
 148:	80 99       	sbic	0x10, 0	; 16
 14a:	05 c0       	rjmp	.+10     	; 0x156 <Check_4+0x12>
	{
		
		PORTA|=(1<<0);
 14c:	d8 9a       	sbi	0x1b, 0	; 27
		while(((KeyPad_Pin>>r1)&1)==0) ; //6ool ma 2na da8et
 14e:	80 9b       	sbis	0x10, 0	; 16
 150:	fe cf       	rjmp	.-4      	; 0x14e <Check_4+0xa>
		PORTA&=~(1<<0);
 152:	d8 98       	cbi	0x1b, 0	; 27
 154:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r2)&1)==0)
 156:	81 99       	sbic	0x10, 1	; 16
 158:	0b c0       	rjmp	.+22     	; 0x170 <Check_4+0x2c>
 15a:	81 ee       	ldi	r24, 0xE1	; 225
 15c:	94 e0       	ldi	r25, 0x04	; 4
 15e:	01 97       	sbiw	r24, 0x01	; 1
 160:	f1 f7       	brne	.-4      	; 0x15e <Check_4+0x1a>
 162:	00 c0       	rjmp	.+0      	; 0x164 <Check_4+0x20>
 164:	00 00       	nop
	{
		_delay_ms(5);
		PORTA|=(1<<1);
 166:	d9 9a       	sbi	0x1b, 1	; 27
		while(((KeyPad_Pin>>r2)&1)==0) ; //6ool ma 2na da8et
 168:	81 9b       	sbis	0x10, 1	; 16
 16a:	fe cf       	rjmp	.-4      	; 0x168 <Check_4+0x24>
		PORTA&=~(1<<1);
 16c:	d9 98       	cbi	0x1b, 1	; 27
 16e:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r3)&1)==0)
 170:	82 99       	sbic	0x10, 2	; 16
 172:	05 c0       	rjmp	.+10     	; 0x17e <Check_4+0x3a>
	{
		
		PORTA|=(1<<2);
 174:	da 9a       	sbi	0x1b, 2	; 27
		while(((KeyPad_Pin>>r3)&1)==0) ; //6ool ma 2na da8et
 176:	82 9b       	sbis	0x10, 2	; 16
 178:	fe cf       	rjmp	.-4      	; 0x176 <Check_4+0x32>
		PORTA&=~(1<<2);
 17a:	da 98       	cbi	0x1b, 2	; 27
 17c:	08 95       	ret
	}
	else if(((KeyPad_Pin>>r4)&1)==0)
 17e:	83 99       	sbic	0x10, 3	; 16
 180:	04 c0       	rjmp	.+8      	; 0x18a <Check_4+0x46>
	{
		
		PORTA|=(1<<3);
 182:	db 9a       	sbi	0x1b, 3	; 27
		while(((KeyPad_Pin>>r4)&1)==0) ; //6ool ma 2na da8et
 184:	83 9b       	sbis	0x10, 3	; 16
 186:	fe cf       	rjmp	.-4      	; 0x184 <Check_4+0x40>
		PORTA&=~(1<<3);
 188:	db 98       	cbi	0x1b, 3	; 27
 18a:	08 95       	ret

0000018c <main>:

#include <avr/io.h>
#include "KeyPad.h"

int main(void)
{   KeyPad_DDR=0xf0;
 18c:	80 ef       	ldi	r24, 0xF0	; 240
 18e:	81 bb       	out	0x11, r24	; 17
	DDRA=0xff;
 190:	8f ef       	ldi	r24, 0xFF	; 255
 192:	8a bb       	out	0x1a, r24	; 26
    /* Replace with your application code */
    while (1) 
    {
		Check_1();
 194:	0e 94 36 00 	call	0x6c	; 0x6c <Check_1>
		Check_2();
 198:	0e 94 5a 00 	call	0xb4	; 0xb4 <Check_2>
		Check_3();
 19c:	0e 94 7e 00 	call	0xfc	; 0xfc <Check_3>
		Check_4();
 1a0:	0e 94 a2 00 	call	0x144	; 0x144 <Check_4>
 1a4:	f7 cf       	rjmp	.-18     	; 0x194 <main+0x8>

000001a6 <_exit>:
 1a6:	f8 94       	cli

000001a8 <__stop_program>:
 1a8:	ff cf       	rjmp	.-2      	; 0x1a8 <__stop_program>
