
Stepper_Motor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000152  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000001a6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001d8  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000214  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000075c  00000000  00000000  0000023c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000005ae  00000000  00000000  00000998  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000336  00000000  00000000  00000f46  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  0000127c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000330  00000000  00000000  000012b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001df  00000000  00000000  000015e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  000017bf  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 59 00 	call	0xb2	; 0xb2 <main>
  64:	0c 94 a7 00 	jmp	0x14e	; 0x14e <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <Stepper_Motor>:
    }
}

void Stepper_Motor(unsigned char mode)
{
	switch(mode)
  6c:	83 30       	cpi	r24, 0x03	; 3
  6e:	a9 f0       	breq	.+42     	; 0x9a <Stepper_Motor+0x2e>
  70:	28 f4       	brcc	.+10     	; 0x7c <Stepper_Motor+0x10>
  72:	81 30       	cpi	r24, 0x01	; 1
  74:	41 f0       	breq	.+16     	; 0x86 <Stepper_Motor+0x1a>
  76:	82 30       	cpi	r24, 0x02	; 2
  78:	59 f0       	breq	.+22     	; 0x90 <Stepper_Motor+0x24>
  7a:	08 95       	ret
  7c:	84 30       	cpi	r24, 0x04	; 4
  7e:	91 f0       	breq	.+36     	; 0xa4 <Stepper_Motor+0x38>
  80:	85 30       	cpi	r24, 0x05	; 5
  82:	a9 f0       	breq	.+42     	; 0xae <Stepper_Motor+0x42>
  84:	08 95       	ret
	  {
		  case  1 : //C
				Stepper_PORT |=(1<<PC5)|(1<<PC6); 
  86:	85 b3       	in	r24, 0x15	; 21
  88:	80 66       	ori	r24, 0x60	; 96
  8a:	85 bb       	out	0x15, r24	; 21
				Stepper_PORT &=~(1<<PC3)|(1<<PC4);
  8c:	ab 98       	cbi	0x15, 3	; 21
				
			 break;
  8e:	08 95       	ret
		  case 2 : //6
				Stepper_PORT |=(1<<PC5)|(1<<PC4);
  90:	85 b3       	in	r24, 0x15	; 21
  92:	80 63       	ori	r24, 0x30	; 48
  94:	85 bb       	out	0x15, r24	; 21
				Stepper_PORT &=~(1<<PC3)|(1<<PC6);
  96:	ab 98       	cbi	0x15, 3	; 21
			break;
  98:	08 95       	ret
			    
		  case  3://3
		      Stepper_PORT |=(1<<PC3)|(1<<PC4);
  9a:	85 b3       	in	r24, 0x15	; 21
  9c:	88 61       	ori	r24, 0x18	; 24
  9e:	85 bb       	out	0x15, r24	; 21
		      Stepper_PORT &=~(1<<PC5)|(1<<PC6);
  a0:	ad 98       	cbi	0x15, 5	; 21
			break;
  a2:	08 95       	ret
		  case  4 ://9
				Stepper_PORT |=(1<<PC3)|(1<<PC6);
  a4:	85 b3       	in	r24, 0x15	; 21
  a6:	88 64       	ori	r24, 0x48	; 72
  a8:	85 bb       	out	0x15, r24	; 21
				Stepper_PORT &=~(1<<PC5)|(1<<PC4);
  aa:	ad 98       	cbi	0x15, 5	; 21
			break;
  ac:	08 95       	ret
			case 5: // all =0
					Stepper_PORT &=~(1<<PC5)|(1<<PC4)|(1<<PC3)|(1<<PC6);
  ae:	ad 98       	cbi	0x15, 5	; 21
  b0:	08 95       	ret

000000b2 <main>:

void Stepper_Motor(unsigned char mode);

int main(void)
{  
	Stepper_Dir|=(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6); 
  b2:	84 b3       	in	r24, 0x14	; 20
  b4:	88 67       	ori	r24, 0x78	; 120
  b6:	84 bb       	out	0x14, r24	; 20
	//Enable For H_bridage
	H_bridage_Dir|=(1<<PD4)|(1<<PD5);
  b8:	81 b3       	in	r24, 0x11	; 17
  ba:	80 63       	ori	r24, 0x30	; 48
  bc:	81 bb       	out	0x11, r24	; 17
	//Enable open Always
	H_bridage_Port|=(1<<PD4)|(1<<PD5);
  be:	82 b3       	in	r24, 0x12	; 18
  c0:	80 63       	ori	r24, 0x30	; 48
  c2:	82 bb       	out	0x12, r24	; 18
    while (1) 
    {
		Stepper_Motor(5);
  c4:	85 e0       	ldi	r24, 0x05	; 5
  c6:	0e 94 36 00 	call	0x6c	; 0x6c <Stepper_Motor>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ca:	2f ef       	ldi	r18, 0xFF	; 255
  cc:	83 ed       	ldi	r24, 0xD3	; 211
  ce:	90 e3       	ldi	r25, 0x30	; 48
  d0:	21 50       	subi	r18, 0x01	; 1
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	90 40       	sbci	r25, 0x00	; 0
  d6:	e1 f7       	brne	.-8      	; 0xd0 <main+0x1e>
  d8:	00 c0       	rjmp	.+0      	; 0xda <main+0x28>
  da:	00 00       	nop
		_delay_ms(1000);
		Stepper_Motor(1);
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	0e 94 36 00 	call	0x6c	; 0x6c <Stepper_Motor>
  e2:	2f ef       	ldi	r18, 0xFF	; 255
  e4:	83 ed       	ldi	r24, 0xD3	; 211
  e6:	90 e3       	ldi	r25, 0x30	; 48
  e8:	21 50       	subi	r18, 0x01	; 1
  ea:	80 40       	sbci	r24, 0x00	; 0
  ec:	90 40       	sbci	r25, 0x00	; 0
  ee:	e1 f7       	brne	.-8      	; 0xe8 <main+0x36>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <main+0x40>
  f2:	00 00       	nop
		_delay_ms(1000);
		Stepper_PORT|=0X00;
  f4:	85 b3       	in	r24, 0x15	; 21
  f6:	85 bb       	out	0x15, r24	; 21
		Stepper_Motor(2);
  f8:	82 e0       	ldi	r24, 0x02	; 2
  fa:	0e 94 36 00 	call	0x6c	; 0x6c <Stepper_Motor>
  fe:	2f ef       	ldi	r18, 0xFF	; 255
 100:	83 ed       	ldi	r24, 0xD3	; 211
 102:	90 e3       	ldi	r25, 0x30	; 48
 104:	21 50       	subi	r18, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x52>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0x5c>
 10e:	00 00       	nop
		_delay_ms(1000);
		Stepper_PORT|=0X00;
 110:	85 b3       	in	r24, 0x15	; 21
 112:	85 bb       	out	0x15, r24	; 21
		Stepper_Motor(3);
 114:	83 e0       	ldi	r24, 0x03	; 3
 116:	0e 94 36 00 	call	0x6c	; 0x6c <Stepper_Motor>
 11a:	2f ef       	ldi	r18, 0xFF	; 255
 11c:	83 ed       	ldi	r24, 0xD3	; 211
 11e:	90 e3       	ldi	r25, 0x30	; 48
 120:	21 50       	subi	r18, 0x01	; 1
 122:	80 40       	sbci	r24, 0x00	; 0
 124:	90 40       	sbci	r25, 0x00	; 0
 126:	e1 f7       	brne	.-8      	; 0x120 <main+0x6e>
 128:	00 c0       	rjmp	.+0      	; 0x12a <main+0x78>
 12a:	00 00       	nop
		_delay_ms(1000);
		Stepper_PORT|=0X00;
 12c:	85 b3       	in	r24, 0x15	; 21
 12e:	85 bb       	out	0x15, r24	; 21
		Stepper_Motor(4);
 130:	84 e0       	ldi	r24, 0x04	; 4
 132:	0e 94 36 00 	call	0x6c	; 0x6c <Stepper_Motor>
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	83 ed       	ldi	r24, 0xD3	; 211
 13a:	90 e3       	ldi	r25, 0x30	; 48
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x8a>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x94>
 146:	00 00       	nop
		_delay_ms(1000);
		Stepper_PORT|=0X00;
 148:	85 b3       	in	r24, 0x15	; 21
 14a:	85 bb       	out	0x15, r24	; 21
 14c:	bb cf       	rjmp	.-138    	; 0xc4 <main+0x12>

0000014e <_exit>:
 14e:	f8 94       	cli

00000150 <__stop_program>:
 150:	ff cf       	rjmp	.-2      	; 0x150 <__stop_program>
